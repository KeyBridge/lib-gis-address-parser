<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>keybridge.lib</groupId>
  <artifactId>gis-address-parser</artifactId>
  <version>2.0.2</version>
  <packaging>jar</packaging>

  <parent>
    <groupId>keybridge.lib</groupId>
    <artifactId>geotools</artifactId>
    <version>25.18.2</version>
  </parent>

  <name>lib-gis-address-parser</name>
  <description>Utility class to parse and standardize address information.

    Address standardization is the process that takes an address
    and converts it to a standard format by analyzing the several components.
    Standardization is not correction ! Standardization is based on syntax
    correction (dictionnaries, spellchecking, synonyms), while correction
    is based on postal reference data : correction checks if each element
    exists and if the combination is correct.

    v0.9.0 - works fine most all of the time
    v0.9.1 - relax error conditions
    v0.9.2 - replace WSIF address with commons GISAddress
    v0.9.3 - refresh dependencies to latest
    v0.9.4 - make more self contained

    v1.0.0 -  depends upon GIS parent  v2.x
    - refactor using Address DTO (replaces GISAddress)

    v2.0.0 - refactor all to 'ch.keybridge.gis' base package
    - use local Address DTO, remove fleeting dependency on lib-gis-dto
    v2.0.1 - bump parent to v1.20.5
    v2.0.2 - bump parent to v25.18.2; fast forward geotools and jts

  </description>

  <properties>

  </properties>

  <build>
    <plugins>
      <!--https://stackoverflow.com/questions/22528767/how-to-work-around-the-stricter-java-8-javadoc-when-using-maven-->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <version>3.1.1</version>
        <configuration>
          <additionalparam>-Xdoclint:none</additionalparam>
          <failOnError>false</failOnError>
        </configuration>
      </plugin>
    </plugins>
  </build>


</project>
